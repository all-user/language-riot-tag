scopeName: 'text.html.riot'
name: 'HTML (Riot Tag)'
fileTypes: [ 'tag' ]
patterns: [

  # Script -----------------------------
  # Coffee
  {
    contentName: 'source.coffee.embedded.html'
    begin: '(?:^\\s+)?(<)(script)\\b(?=[^>]*type="(?:text/)?coffee")'
    end: '(</)(script)(>)(?:\\s*\\n)?'
    captures:
      '1':
        name: 'punctuation.definition.tag.begin.html'
      '2':
        name: 'entity.name.tag.script.html'
      '3':
        name: 'punctuation.definition.tag.end.html'
    patterns: [
      { include: '#tagStuff' }
      {
        begin: '(>)'
        end: '(?=</script)'
        patterns: [
          { include: 'source.coffee' }
        ]
      }
    ]
  }
  # ----------------------------- Script

  # Style ------------------------------
  # Pure CSS
  {
    contentName: 'source.css.embedded.html'
    begin: '(?:^\\s+)?(<)(style)\\b(?![^>]*(?:(?:/>)|(?:type="(?:text/)?(?:stylus|sass|scss|less)")))'
    end: '(</)(style)(>)(?:\\s*\\n)?'
    captures:
      '1':
        name: 'punctuation.definition.tag.begin.html'
      '2':
        name: 'entity.name.tag.style.html'
      '3':
        name: 'punctuation.definition.tag.end.html'
    patterns: [
      { include: '#tagStuff' }
      {
        begin: '(>)'
        end: '(?=</style)'
        patterns: [
          { include: 'source.css' }
        ]
      }
    ]
  }
  # Stylus
  {
    contentName: 'source.stylus.embedded.html'
    begin: '(?:^\\s+)?(<)(style)\\b(?=[^>]*type="(?:text/)?stylus")'
    end: '(</)(style)(>)(?:\\s*\\n)?'
    captures:
      '1':
        name: 'punctuation.definition.tag.begin.html'
      '2':
        name: 'entity.name.tag.style.html'
      '3':
        name: 'punctuation.definition.tag.end.html'
    patterns: [
      { include: '#tagStuff' }
      {
        begin: '(>)'
        end: '(?=</style)'
        patterns: [
          { include: 'source.stylus' }
        ]
      }
    ]
  }
  # Sass
  {
    contentName: 'source.sass.embedded.html'
    begin: '(?:^\\s+)?(<)(style)\\b(?=[^>]*type="(?:text/)?sass")'
    end: '(</)(style)(>)(?:\\s*\\n)?'
    captures:
      '1':
        name: 'punctuation.definition.tag.begin.html'
      '2':
        name: 'entity.name.tag.style.html'
      '3':
        name: 'punctuation.definition.tag.end.html'
    patterns: [
      { include: '#tagStuff' }
      {
        begin: '(>)'
        end: '(?=</style)'
        patterns: [
          { include: 'source.sass' }
        ]
      }
    ]
  }
  # Scss
  {
    contentName: 'source.css.scss.embedded.html'
    begin: '(?:^\\s+)?(<)(style)\\b(?=[^>]*type="(?:text/)?scss")'
    end: '(</)(style)(>)(?:\\s*\\n)?'
    captures:
      '1':
        name: 'punctuation.definition.tag.begin.html'
      '2':
        name: 'entity.name.tag.style.html'
      '3':
        name: 'punctuation.definition.tag.end.html'
    patterns: [
      { include: '#tagStuff' }
      {
        begin: '(>)'
        end: '(?=</style)'
        patterns: [
          { include: 'source.css.scss' }
        ]
      }
    ]
  }
  # Less
  {
    contentName: 'source.css.less.embedded.html'
    begin: '(?:^\\s+)?(<)(style)\\b(?=[^>]*type="(?:text/)?less")'
    end: '(</)(style)(>)(?:\\s*\\n)?'
    captures:
      '1':
        name: 'punctuation.definition.tag.begin.html'
      '2':
        name: 'entity.name.tag.style.html'
      '3':
        name: 'punctuation.definition.tag.end.html'
    patterns: [
      { include: '#tagStuff' }
      {
        begin: '(>)'
        end: '(?=</style)'
        patterns: [
          { include: 'source.css.less' }
        ]
      }
    ]
  }
  # ------------------------------ Style

  # include ----------------------------
  { include: 'text.html.basic' }  # - for html tag
  # { 'include': 'source.js' }        # - for scripts on the outside <script></script>
  # ------------------------------------
]

repository:

  stringDoubleQuoted:
    name: 'string.quoted.double.html'
    begin: '"'
    beginCaptures:
      '0':
        name: 'punctuation.definition.string.begin.html'
    end: '"'
    endCaptures:
      '0':
        name: 'punctuation.definition.string.end.html'

  stringSingleQuoted:
    name: 'string.quoted.single.html'
    begin: '\''
    beginCaptures:
      '0':
        name: 'punctuation.definition.string.begin.html'
    end: '\''
    endCaptures:
      '0':
        name: 'punctuation.definition.string.end.html'

  tagGenericAttribute:
    name: 'entity.other.attribute-name.html'
    match: '\\b([a-zA-Z\\-:]+)'

  tagIdAttribute:
    name: 'meta.attribute-with-value.id.html'
    begin: '\\b(id)\\b\\s*(=)'
    end: '(?:\'|")'
    captures:
      '1':
        name: 'entity.other.attribute-name.id.html'
      '2':
        name: 'punctuation.separator.key-value.html'
    patterns: [
      {
        name: 'string.quoted.double.html'
        contentName: 'meta.toc-list.id.html'
        begin: '"'
        beginCaptures:
          '0':
            name: 'punctuation.definition.string.begin.html'
        end: '"'
        endCaptures:
          '0':
            name: 'punctuation.definition.string.end.html'
      }
      {
        name: 'string.quoted.single.html'
        contentName: 'meta.toc-list.id.html'
        begin: '\''
        beginCaptures:
          '0':
            name: 'punctuation.definition.string.begin.html'
        end: '\''
        endCaptures:
          '0':
            name: 'punctuation.definition.string.end.html'
      }
    ]

  tagStuff:
    patterns: [
      { include: '#tagIdAttribute' }
      { include: '#tagGenericAttribute' }
      { include: '#stringDoubleQuoted' }
      { include: '#stringSingleQuoted' }
    ]
